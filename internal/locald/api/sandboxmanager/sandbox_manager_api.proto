syntax = "proto3";

import "google/protobuf/struct.proto";
import "internal/locald/api/common.proto";

option go_package = "github.com/signadot/cli/internal/locald/api/sandboxmanager";

package sandboxmanager;


service SandboxManagerAPI {
  // This method returns the status of the local controller
  rpc Status(StatusRequest) returns (StatusResponse) {}

  // This method requests the root controller to shutdown
  rpc Shutdown(ShutdownRequest) returns (ShutdownResponse) {}

  // This method is used to register sandboxes in the local controller. It is
  // mainly used in the context of old operators (the ones that don't support
  // WatchLocalSandboxes in tunnel-api)
  rpc RegisterSandbox(RegisterSandboxRequest) returns (RegisterSandboxResponse) {}

  rpc GetResourceOutput(GetResourceOutputRequest) returns (GetResourceOutputResponse) {}
}

// Status
// ----------------------------------------------------------------------------

message StatusRequest {
}

message StatusResponse {
  // connect invocation config
  // (instance of internal/config/locald.ConnectInvocationConfig)
  google.protobuf.Struct ci_config = 1;
  apicommon.OperatorInfo operator_info = 7;
  apicommon.LocalNetStatus localnet = 2;
  apicommon.HostsStatus hosts = 3;
  apicommon.PortForwardStatus portforward = 4;
  apicommon.ControlPlaneProxyStatus control_plane_proxy = 8;
  apicommon.WatcherStatus watcher = 6;
  repeated apicommon.SandboxStatus sandboxes = 5;
}

// Shutdown
// ----------------------------------------------------------------------------

message ShutdownRequest {
}

message ShutdownResponse {
}

// RegisterSandbox
// ----------------------------------------------------------------------------

message RegisterSandboxRequest {
  string sandbox_name = 1;
  string routing_key = 2;
}

message RegisterSandboxResponse {
}

// Resource outputs
// ---------------------------------------------------------------------------
message GetResourceOutputRequest {
  string sandbox_name = 1;
  string resource_name = 2;
  string output_name = 3;
}

message GetResourceOutputResponse {
  string output_value = 1;
}
