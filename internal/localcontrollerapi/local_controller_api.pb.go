// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.12.4
// source: internal/localcontrollerapi/local_controller_api.proto

package localcontrollerapi

import (
	_struct "github.com/golang/protobuf/ptypes/struct"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ApplySandboxRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// sandbox name
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// sandbox spec (instance of github.com/signadot/go-sdk/models.SandboxSpec)
	SandboxSpec *_struct.Struct `protobuf:"bytes,2,opt,name=sandbox_spec,json=sandboxSpec,proto3" json:"sandbox_spec,omitempty"`
}

func (x *ApplySandboxRequest) Reset() {
	*x = ApplySandboxRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_localcontrollerapi_local_controller_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplySandboxRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplySandboxRequest) ProtoMessage() {}

func (x *ApplySandboxRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_localcontrollerapi_local_controller_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplySandboxRequest.ProtoReflect.Descriptor instead.
func (*ApplySandboxRequest) Descriptor() ([]byte, []int) {
	return file_internal_localcontrollerapi_local_controller_api_proto_rawDescGZIP(), []int{0}
}

func (x *ApplySandboxRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ApplySandboxRequest) GetSandboxSpec() *_struct.Struct {
	if x != nil {
		return x.SandboxSpec
	}
	return nil
}

type ApplySandboxResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// sandbox (instance of github.com/signadot/go-sdk/models.Sandbox)
	Sandbox *_struct.Struct `protobuf:"bytes,1,opt,name=sandbox,proto3" json:"sandbox,omitempty"`
}

func (x *ApplySandboxResponse) Reset() {
	*x = ApplySandboxResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_localcontrollerapi_local_controller_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplySandboxResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplySandboxResponse) ProtoMessage() {}

func (x *ApplySandboxResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_localcontrollerapi_local_controller_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplySandboxResponse.ProtoReflect.Descriptor instead.
func (*ApplySandboxResponse) Descriptor() ([]byte, []int) {
	return file_internal_localcontrollerapi_local_controller_api_proto_rawDescGZIP(), []int{1}
}

func (x *ApplySandboxResponse) GetSandbox() *_struct.Struct {
	if x != nil {
		return x.Sandbox
	}
	return nil
}

type IsLocalSandboxRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// sandbox name
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *IsLocalSandboxRequest) Reset() {
	*x = IsLocalSandboxRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_localcontrollerapi_local_controller_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsLocalSandboxRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsLocalSandboxRequest) ProtoMessage() {}

func (x *IsLocalSandboxRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_localcontrollerapi_local_controller_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsLocalSandboxRequest.ProtoReflect.Descriptor instead.
func (*IsLocalSandboxRequest) Descriptor() ([]byte, []int) {
	return file_internal_localcontrollerapi_local_controller_api_proto_rawDescGZIP(), []int{2}
}

func (x *IsLocalSandboxRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type IsLocalSandboxResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// is this a sandbox managed by local controller?
	IsLocal bool `protobuf:"varint,1,opt,name=is_local,json=isLocal,proto3" json:"is_local,omitempty"`
}

func (x *IsLocalSandboxResponse) Reset() {
	*x = IsLocalSandboxResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_localcontrollerapi_local_controller_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsLocalSandboxResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsLocalSandboxResponse) ProtoMessage() {}

func (x *IsLocalSandboxResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_localcontrollerapi_local_controller_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsLocalSandboxResponse.ProtoReflect.Descriptor instead.
func (*IsLocalSandboxResponse) Descriptor() ([]byte, []int) {
	return file_internal_localcontrollerapi_local_controller_api_proto_rawDescGZIP(), []int{3}
}

func (x *IsLocalSandboxResponse) GetIsLocal() bool {
	if x != nil {
		return x.IsLocal
	}
	return false
}

type DeleteSandboxRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// sandbox name
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DeleteSandboxRequest) Reset() {
	*x = DeleteSandboxRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_localcontrollerapi_local_controller_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSandboxRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSandboxRequest) ProtoMessage() {}

func (x *DeleteSandboxRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_localcontrollerapi_local_controller_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSandboxRequest.ProtoReflect.Descriptor instead.
func (*DeleteSandboxRequest) Descriptor() ([]byte, []int) {
	return file_internal_localcontrollerapi_local_controller_api_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteSandboxRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type DeleteSandboxResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteSandboxResponse) Reset() {
	*x = DeleteSandboxResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_localcontrollerapi_local_controller_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSandboxResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSandboxResponse) ProtoMessage() {}

func (x *DeleteSandboxResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_localcontrollerapi_local_controller_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSandboxResponse.ProtoReflect.Descriptor instead.
func (*DeleteSandboxResponse) Descriptor() ([]byte, []int) {
	return file_internal_localcontrollerapi_local_controller_api_proto_rawDescGZIP(), []int{5}
}

type LocalNetEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// process id of the localnet process
	Pid uint64 `protobuf:"varint,1,opt,name=pid,proto3" json:"pid,omitempty"`
	// localnet event
	//
	// Types that are assignable to Event:
	//
	//	*LocalNetEvent_Up_
	//	*LocalNetEvent_Status_
	//	*LocalNetEvent_Down_
	Event isLocalNetEvent_Event `protobuf_oneof:"event"`
}

func (x *LocalNetEvent) Reset() {
	*x = LocalNetEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_localcontrollerapi_local_controller_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocalNetEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocalNetEvent) ProtoMessage() {}

func (x *LocalNetEvent) ProtoReflect() protoreflect.Message {
	mi := &file_internal_localcontrollerapi_local_controller_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocalNetEvent.ProtoReflect.Descriptor instead.
func (*LocalNetEvent) Descriptor() ([]byte, []int) {
	return file_internal_localcontrollerapi_local_controller_api_proto_rawDescGZIP(), []int{6}
}

func (x *LocalNetEvent) GetPid() uint64 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (m *LocalNetEvent) GetEvent() isLocalNetEvent_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (x *LocalNetEvent) GetUp() *LocalNetEvent_Up {
	if x, ok := x.GetEvent().(*LocalNetEvent_Up_); ok {
		return x.Up
	}
	return nil
}

func (x *LocalNetEvent) GetStatus() *LocalNetEvent_Status {
	if x, ok := x.GetEvent().(*LocalNetEvent_Status_); ok {
		return x.Status
	}
	return nil
}

func (x *LocalNetEvent) GetDown() *LocalNetEvent_Down {
	if x, ok := x.GetEvent().(*LocalNetEvent_Down_); ok {
		return x.Down
	}
	return nil
}

type isLocalNetEvent_Event interface {
	isLocalNetEvent_Event()
}

type LocalNetEvent_Up_ struct {
	Up *LocalNetEvent_Up `protobuf:"bytes,2,opt,name=up,proto3,oneof"`
}

type LocalNetEvent_Status_ struct {
	Status *LocalNetEvent_Status `protobuf:"bytes,3,opt,name=status,proto3,oneof"`
}

type LocalNetEvent_Down_ struct {
	Down *LocalNetEvent_Down `protobuf:"bytes,4,opt,name=down,proto3,oneof"`
}

func (*LocalNetEvent_Up_) isLocalNetEvent_Event() {}

func (*LocalNetEvent_Status_) isLocalNetEvent_Event() {}

func (*LocalNetEvent_Down_) isLocalNetEvent_Event() {}

type LocalNetAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Event:
	//
	//	*LocalNetAction_SendStatus_
	//	*LocalNetAction_Shutdown_
	Event isLocalNetAction_Event `protobuf_oneof:"event"`
}

func (x *LocalNetAction) Reset() {
	*x = LocalNetAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_localcontrollerapi_local_controller_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocalNetAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocalNetAction) ProtoMessage() {}

func (x *LocalNetAction) ProtoReflect() protoreflect.Message {
	mi := &file_internal_localcontrollerapi_local_controller_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocalNetAction.ProtoReflect.Descriptor instead.
func (*LocalNetAction) Descriptor() ([]byte, []int) {
	return file_internal_localcontrollerapi_local_controller_api_proto_rawDescGZIP(), []int{7}
}

func (m *LocalNetAction) GetEvent() isLocalNetAction_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (x *LocalNetAction) GetSendStatus() *LocalNetAction_SendStatus {
	if x, ok := x.GetEvent().(*LocalNetAction_SendStatus_); ok {
		return x.SendStatus
	}
	return nil
}

func (x *LocalNetAction) GetShutdown() *LocalNetAction_Shutdown {
	if x, ok := x.GetEvent().(*LocalNetAction_Shutdown_); ok {
		return x.Shutdown
	}
	return nil
}

type isLocalNetAction_Event interface {
	isLocalNetAction_Event()
}

type LocalNetAction_SendStatus_ struct {
	SendStatus *LocalNetAction_SendStatus `protobuf:"bytes,1,opt,name=send_status,json=sendStatus,proto3,oneof"`
}

type LocalNetAction_Shutdown_ struct {
	Shutdown *LocalNetAction_Shutdown `protobuf:"bytes,2,opt,name=shutdown,proto3,oneof"`
}

func (*LocalNetAction_SendStatus_) isLocalNetAction_Event() {}

func (*LocalNetAction_Shutdown_) isLocalNetAction_Event() {}

type ShutdownRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ShutdownRequest) Reset() {
	*x = ShutdownRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_localcontrollerapi_local_controller_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShutdownRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShutdownRequest) ProtoMessage() {}

func (x *ShutdownRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_localcontrollerapi_local_controller_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShutdownRequest.ProtoReflect.Descriptor instead.
func (*ShutdownRequest) Descriptor() ([]byte, []int) {
	return file_internal_localcontrollerapi_local_controller_api_proto_rawDescGZIP(), []int{8}
}

type ShutdownResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ShutdownResponse) Reset() {
	*x = ShutdownResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_localcontrollerapi_local_controller_api_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShutdownResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShutdownResponse) ProtoMessage() {}

func (x *ShutdownResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_localcontrollerapi_local_controller_api_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShutdownResponse.ProtoReflect.Descriptor instead.
func (*ShutdownResponse) Descriptor() ([]byte, []int) {
	return file_internal_localcontrollerapi_local_controller_api_proto_rawDescGZIP(), []int{9}
}

// This indicates the localnet process is up
type LocalNetEvent_Up struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LocalNetEvent_Up) Reset() {
	*x = LocalNetEvent_Up{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_localcontrollerapi_local_controller_api_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocalNetEvent_Up) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocalNetEvent_Up) ProtoMessage() {}

func (x *LocalNetEvent_Up) ProtoReflect() protoreflect.Message {
	mi := &file_internal_localcontrollerapi_local_controller_api_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocalNetEvent_Up.ProtoReflect.Descriptor instead.
func (*LocalNetEvent_Up) Descriptor() ([]byte, []int) {
	return file_internal_localcontrollerapi_local_controller_api_proto_rawDescGZIP(), []int{6, 0}
}

// This is the current status of the localnet process
type LocalNetEvent_Status struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// CIDRs info
	Cidrs         []string `protobuf:"bytes,1,rep,name=cidrs,proto3" json:"cidrs,omitempty"`
	ExcludedCidrs []string `protobuf:"bytes,2,rep,name=excluded_cidrs,json=excludedCidrs,proto3" json:"excluded_cidrs,omitempty"`
	// Health
	Healthy           bool                 `protobuf:"varint,3,opt,name=healthy,proto3" json:"healthy,omitempty"`
	NumHosts          uint32               `protobuf:"varint,4,opt,name=num_hosts,json=numHosts,proto3" json:"num_hosts,omitempty"`
	RestartCount      uint32               `protobuf:"varint,5,opt,name=restart_count,json=restartCount,proto3" json:"restart_count,omitempty"`
	LastRestartReason string               `protobuf:"bytes,6,opt,name=last_restart_reason,json=lastRestartReason,proto3" json:"last_restart_reason,omitempty"`
	LastRestartTime   *timestamp.Timestamp `protobuf:"bytes,7,opt,name=last_restart_time,json=lastRestartTime,proto3" json:"last_restart_time,omitempty"`
}

func (x *LocalNetEvent_Status) Reset() {
	*x = LocalNetEvent_Status{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_localcontrollerapi_local_controller_api_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocalNetEvent_Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocalNetEvent_Status) ProtoMessage() {}

func (x *LocalNetEvent_Status) ProtoReflect() protoreflect.Message {
	mi := &file_internal_localcontrollerapi_local_controller_api_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocalNetEvent_Status.ProtoReflect.Descriptor instead.
func (*LocalNetEvent_Status) Descriptor() ([]byte, []int) {
	return file_internal_localcontrollerapi_local_controller_api_proto_rawDescGZIP(), []int{6, 1}
}

func (x *LocalNetEvent_Status) GetCidrs() []string {
	if x != nil {
		return x.Cidrs
	}
	return nil
}

func (x *LocalNetEvent_Status) GetExcludedCidrs() []string {
	if x != nil {
		return x.ExcludedCidrs
	}
	return nil
}

func (x *LocalNetEvent_Status) GetHealthy() bool {
	if x != nil {
		return x.Healthy
	}
	return false
}

func (x *LocalNetEvent_Status) GetNumHosts() uint32 {
	if x != nil {
		return x.NumHosts
	}
	return 0
}

func (x *LocalNetEvent_Status) GetRestartCount() uint32 {
	if x != nil {
		return x.RestartCount
	}
	return 0
}

func (x *LocalNetEvent_Status) GetLastRestartReason() string {
	if x != nil {
		return x.LastRestartReason
	}
	return ""
}

func (x *LocalNetEvent_Status) GetLastRestartTime() *timestamp.Timestamp {
	if x != nil {
		return x.LastRestartTime
	}
	return nil
}

// This indicates the localnet process is going down
type LocalNetEvent_Down struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LocalNetEvent_Down) Reset() {
	*x = LocalNetEvent_Down{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_localcontrollerapi_local_controller_api_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocalNetEvent_Down) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocalNetEvent_Down) ProtoMessage() {}

func (x *LocalNetEvent_Down) ProtoReflect() protoreflect.Message {
	mi := &file_internal_localcontrollerapi_local_controller_api_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocalNetEvent_Down.ProtoReflect.Descriptor instead.
func (*LocalNetEvent_Down) Descriptor() ([]byte, []int) {
	return file_internal_localcontrollerapi_local_controller_api_proto_rawDescGZIP(), []int{6, 2}
}

// This action requests the localnet process to send its
// status
type LocalNetAction_SendStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LocalNetAction_SendStatus) Reset() {
	*x = LocalNetAction_SendStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_localcontrollerapi_local_controller_api_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocalNetAction_SendStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocalNetAction_SendStatus) ProtoMessage() {}

func (x *LocalNetAction_SendStatus) ProtoReflect() protoreflect.Message {
	mi := &file_internal_localcontrollerapi_local_controller_api_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocalNetAction_SendStatus.ProtoReflect.Descriptor instead.
func (*LocalNetAction_SendStatus) Descriptor() ([]byte, []int) {
	return file_internal_localcontrollerapi_local_controller_api_proto_rawDescGZIP(), []int{7, 0}
}

// This action requests the localnet process to shutdown
type LocalNetAction_Shutdown struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LocalNetAction_Shutdown) Reset() {
	*x = LocalNetAction_Shutdown{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_localcontrollerapi_local_controller_api_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocalNetAction_Shutdown) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocalNetAction_Shutdown) ProtoMessage() {}

func (x *LocalNetAction_Shutdown) ProtoReflect() protoreflect.Message {
	mi := &file_internal_localcontrollerapi_local_controller_api_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocalNetAction_Shutdown.ProtoReflect.Descriptor instead.
func (*LocalNetAction_Shutdown) Descriptor() ([]byte, []int) {
	return file_internal_localcontrollerapi_local_controller_api_proto_rawDescGZIP(), []int{7, 1}
}

var File_internal_localcontrollerapi_local_controller_api_proto protoreflect.FileDescriptor

var file_internal_localcontrollerapi_local_controller_api_proto_rawDesc = []byte{
	0x0a, 0x36, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x6c,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x61, 0x70, 0x69, 0x2f, 0x6c, 0x6f,
	0x63, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x61,
	0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x61, 0x70, 0x69, 0x1a, 0x1c, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x65, 0x0a, 0x13, 0x41,
	0x70, 0x70, 0x6c, 0x79, 0x53, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3a, 0x0a, 0x0c, 0x73, 0x61, 0x6e, 0x64, 0x62, 0x6f,
	0x78, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x0b, 0x73, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x53, 0x70,
	0x65, 0x63, 0x22, 0x49, 0x0a, 0x14, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x53, 0x61, 0x6e, 0x64, 0x62,
	0x6f, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x07, 0x73, 0x61,
	0x6e, 0x64, 0x62, 0x6f, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x52, 0x07, 0x73, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x22, 0x2b, 0x0a,
	0x15, 0x49, 0x73, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x53, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x33, 0x0a, 0x16, 0x49, 0x73,
	0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x53, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x22,
	0x2a, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x17, 0x0a, 0x15, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x8e, 0x04, 0x0a, 0x0d, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x4e, 0x65,
	0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x03, 0x70, 0x69, 0x64, 0x12, 0x36, 0x0a, 0x02, 0x75, 0x70, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x4e,
	0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x48, 0x00, 0x52, 0x02, 0x75, 0x70,
	0x12, 0x42, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c,
	0x65, 0x72, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x4e, 0x65, 0x74, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x48, 0x00, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x3c, 0x0a, 0x04, 0x64, 0x6f, 0x77, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x6c, 0x65, 0x72, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x4e, 0x65, 0x74,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x48, 0x00, 0x52, 0x04, 0x64, 0x6f,
	0x77, 0x6e, 0x1a, 0x04, 0x0a, 0x02, 0x55, 0x70, 0x1a, 0x99, 0x02, 0x0a, 0x06, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x69, 0x64, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x05, 0x63, 0x69, 0x64, 0x72, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x78, 0x63,
	0x6c, 0x75, 0x64, 0x65, 0x64, 0x5f, 0x63, 0x69, 0x64, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0d, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x43, 0x69, 0x64, 0x72, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x75,
	0x6d, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6e,
	0x75, 0x6d, 0x48, 0x6f, 0x73, 0x74, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c,
	0x72, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x13,
	0x6c, 0x61, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x72, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6c, 0x61, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x46, 0x0a, 0x11,
	0x6c, 0x61, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x1a, 0x06, 0x0a, 0x04, 0x44, 0x6f, 0x77, 0x6e, 0x42, 0x07, 0x0a, 0x05,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x22, 0xd0, 0x01, 0x0a, 0x0e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x4e,
	0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x50, 0x0a, 0x0b, 0x73, 0x65, 0x6e, 0x64,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e,
	0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x61,
	0x70, 0x69, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x4e, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x48, 0x00, 0x52, 0x0a,
	0x73, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x49, 0x0a, 0x08, 0x73, 0x68,
	0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6c,
	0x6f, 0x63, 0x61, 0x6c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x61, 0x70,
	0x69, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x4e, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x53, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x48, 0x00, 0x52, 0x08, 0x73, 0x68, 0x75,
	0x74, 0x64, 0x6f, 0x77, 0x6e, 0x1a, 0x0c, 0x0a, 0x0a, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x1a, 0x0a, 0x0a, 0x08, 0x53, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x42,
	0x07, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x11, 0x0a, 0x0f, 0x53, 0x68, 0x75, 0x74,
	0x64, 0x6f, 0x77, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x12, 0x0a, 0x10, 0x53,
	0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32,
	0x85, 0x04, 0x0a, 0x12, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x6c, 0x65, 0x72, 0x41, 0x50, 0x49, 0x12, 0x63, 0x0a, 0x0c, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x53,
	0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x12, 0x27, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x70, 0x70, 0x6c,
	0x79, 0x53, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x28, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65,
	0x72, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x53, 0x61, 0x6e, 0x64, 0x62, 0x6f,
	0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x69, 0x0a, 0x0e, 0x49,
	0x73, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x53, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x12, 0x29, 0x2e,
	0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x61,
	0x70, 0x69, 0x2e, 0x49, 0x73, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x53, 0x61, 0x6e, 0x64, 0x62, 0x6f,
	0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x73,
	0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x53, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x66, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x53, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x12, 0x28, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x53, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x29, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x6c, 0x65, 0x72, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x61, 0x6e,
	0x64, 0x62, 0x6f, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5e,
	0x0a, 0x0f, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x4e, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x12, 0x21, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x6c, 0x65, 0x72, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x4e, 0x65, 0x74, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x1a, 0x22, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x4e,
	0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x12, 0x57,
	0x0a, 0x08, 0x53, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x12, 0x23, 0x2e, 0x6c, 0x6f, 0x63,
	0x61, 0x6c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x61, 0x70, 0x69, 0x2e,
	0x53, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x24, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65,
	0x72, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x35, 0x5a, 0x33, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x64, 0x6f, 0x74, 0x2f, 0x63,
	0x6c, 0x69, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x6c, 0x6f, 0x63, 0x61,
	0x6c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x61, 0x70, 0x69, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_internal_localcontrollerapi_local_controller_api_proto_rawDescOnce sync.Once
	file_internal_localcontrollerapi_local_controller_api_proto_rawDescData = file_internal_localcontrollerapi_local_controller_api_proto_rawDesc
)

func file_internal_localcontrollerapi_local_controller_api_proto_rawDescGZIP() []byte {
	file_internal_localcontrollerapi_local_controller_api_proto_rawDescOnce.Do(func() {
		file_internal_localcontrollerapi_local_controller_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_internal_localcontrollerapi_local_controller_api_proto_rawDescData)
	})
	return file_internal_localcontrollerapi_local_controller_api_proto_rawDescData
}

var file_internal_localcontrollerapi_local_controller_api_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_internal_localcontrollerapi_local_controller_api_proto_goTypes = []interface{}{
	(*ApplySandboxRequest)(nil),       // 0: localcontrollerapi.ApplySandboxRequest
	(*ApplySandboxResponse)(nil),      // 1: localcontrollerapi.ApplySandboxResponse
	(*IsLocalSandboxRequest)(nil),     // 2: localcontrollerapi.IsLocalSandboxRequest
	(*IsLocalSandboxResponse)(nil),    // 3: localcontrollerapi.IsLocalSandboxResponse
	(*DeleteSandboxRequest)(nil),      // 4: localcontrollerapi.DeleteSandboxRequest
	(*DeleteSandboxResponse)(nil),     // 5: localcontrollerapi.DeleteSandboxResponse
	(*LocalNetEvent)(nil),             // 6: localcontrollerapi.LocalNetEvent
	(*LocalNetAction)(nil),            // 7: localcontrollerapi.LocalNetAction
	(*ShutdownRequest)(nil),           // 8: localcontrollerapi.ShutdownRequest
	(*ShutdownResponse)(nil),          // 9: localcontrollerapi.ShutdownResponse
	(*LocalNetEvent_Up)(nil),          // 10: localcontrollerapi.LocalNetEvent.Up
	(*LocalNetEvent_Status)(nil),      // 11: localcontrollerapi.LocalNetEvent.Status
	(*LocalNetEvent_Down)(nil),        // 12: localcontrollerapi.LocalNetEvent.Down
	(*LocalNetAction_SendStatus)(nil), // 13: localcontrollerapi.LocalNetAction.SendStatus
	(*LocalNetAction_Shutdown)(nil),   // 14: localcontrollerapi.LocalNetAction.Shutdown
	(*_struct.Struct)(nil),            // 15: google.protobuf.Struct
	(*timestamp.Timestamp)(nil),       // 16: google.protobuf.Timestamp
}
var file_internal_localcontrollerapi_local_controller_api_proto_depIdxs = []int32{
	15, // 0: localcontrollerapi.ApplySandboxRequest.sandbox_spec:type_name -> google.protobuf.Struct
	15, // 1: localcontrollerapi.ApplySandboxResponse.sandbox:type_name -> google.protobuf.Struct
	10, // 2: localcontrollerapi.LocalNetEvent.up:type_name -> localcontrollerapi.LocalNetEvent.Up
	11, // 3: localcontrollerapi.LocalNetEvent.status:type_name -> localcontrollerapi.LocalNetEvent.Status
	12, // 4: localcontrollerapi.LocalNetEvent.down:type_name -> localcontrollerapi.LocalNetEvent.Down
	13, // 5: localcontrollerapi.LocalNetAction.send_status:type_name -> localcontrollerapi.LocalNetAction.SendStatus
	14, // 6: localcontrollerapi.LocalNetAction.shutdown:type_name -> localcontrollerapi.LocalNetAction.Shutdown
	16, // 7: localcontrollerapi.LocalNetEvent.Status.last_restart_time:type_name -> google.protobuf.Timestamp
	0,  // 8: localcontrollerapi.LocalControllerAPI.ApplySandbox:input_type -> localcontrollerapi.ApplySandboxRequest
	2,  // 9: localcontrollerapi.LocalControllerAPI.IsLocalSandbox:input_type -> localcontrollerapi.IsLocalSandboxRequest
	4,  // 10: localcontrollerapi.LocalControllerAPI.DeleteSandbox:input_type -> localcontrollerapi.DeleteSandboxRequest
	6,  // 11: localcontrollerapi.LocalControllerAPI.LocalNetChannel:input_type -> localcontrollerapi.LocalNetEvent
	8,  // 12: localcontrollerapi.LocalControllerAPI.Shutdown:input_type -> localcontrollerapi.ShutdownRequest
	1,  // 13: localcontrollerapi.LocalControllerAPI.ApplySandbox:output_type -> localcontrollerapi.ApplySandboxResponse
	3,  // 14: localcontrollerapi.LocalControllerAPI.IsLocalSandbox:output_type -> localcontrollerapi.IsLocalSandboxResponse
	5,  // 15: localcontrollerapi.LocalControllerAPI.DeleteSandbox:output_type -> localcontrollerapi.DeleteSandboxResponse
	7,  // 16: localcontrollerapi.LocalControllerAPI.LocalNetChannel:output_type -> localcontrollerapi.LocalNetAction
	9,  // 17: localcontrollerapi.LocalControllerAPI.Shutdown:output_type -> localcontrollerapi.ShutdownResponse
	13, // [13:18] is the sub-list for method output_type
	8,  // [8:13] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_internal_localcontrollerapi_local_controller_api_proto_init() }
func file_internal_localcontrollerapi_local_controller_api_proto_init() {
	if File_internal_localcontrollerapi_local_controller_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_internal_localcontrollerapi_local_controller_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplySandboxRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_localcontrollerapi_local_controller_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplySandboxResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_localcontrollerapi_local_controller_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsLocalSandboxRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_localcontrollerapi_local_controller_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsLocalSandboxResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_localcontrollerapi_local_controller_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSandboxRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_localcontrollerapi_local_controller_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSandboxResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_localcontrollerapi_local_controller_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocalNetEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_localcontrollerapi_local_controller_api_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocalNetAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_localcontrollerapi_local_controller_api_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShutdownRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_localcontrollerapi_local_controller_api_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShutdownResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_localcontrollerapi_local_controller_api_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocalNetEvent_Up); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_localcontrollerapi_local_controller_api_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocalNetEvent_Status); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_localcontrollerapi_local_controller_api_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocalNetEvent_Down); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_localcontrollerapi_local_controller_api_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocalNetAction_SendStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_localcontrollerapi_local_controller_api_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocalNetAction_Shutdown); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_internal_localcontrollerapi_local_controller_api_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*LocalNetEvent_Up_)(nil),
		(*LocalNetEvent_Status_)(nil),
		(*LocalNetEvent_Down_)(nil),
	}
	file_internal_localcontrollerapi_local_controller_api_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*LocalNetAction_SendStatus_)(nil),
		(*LocalNetAction_Shutdown_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_internal_localcontrollerapi_local_controller_api_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_internal_localcontrollerapi_local_controller_api_proto_goTypes,
		DependencyIndexes: file_internal_localcontrollerapi_local_controller_api_proto_depIdxs,
		MessageInfos:      file_internal_localcontrollerapi_local_controller_api_proto_msgTypes,
	}.Build()
	File_internal_localcontrollerapi_local_controller_api_proto = out.File
	file_internal_localcontrollerapi_local_controller_api_proto_rawDesc = nil
	file_internal_localcontrollerapi_local_controller_api_proto_goTypes = nil
	file_internal_localcontrollerapi_local_controller_api_proto_depIdxs = nil
}
